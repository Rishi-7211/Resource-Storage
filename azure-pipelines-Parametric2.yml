# azure-pipelines.yml

trigger: none

parameters:
  - name: runInit
    displayName: 'Run Terraform Init'
    type: boolean
    default: true

  - name: runValidate
    displayName: 'Run Terraform Validate'
    type: boolean
    default: true

  - name: runPlan
    displayName: 'Run Terraform Plan'
    type: boolean
    default: true

  - name: runApply
    displayName: 'Run Terraform Apply'
    type: boolean
    default: false  # Apply ko by default off rakhte hain for safety

pool:
  name: DevSecops_Agent

steps:
- task: TerraformInstaller@1
  displayName: 'Terraform Installation'
  inputs:
    terraformVersion: 'latest'

# Terraform Init
- ${{ if parameters.runInit }}:
  - task: TerraformTask@5
    displayName: 'Terraform Init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: 'DevSecOps_Federation'
      backendAzureRmResourceGroupName: 'Vaishanvi_RG'
      backendAzureRmStorageAccountName: 'vaishanvistorage'
      backendAzureRmContainerName: 'vaishanvicontainer'
      backendAzureRmKey: 'Prod.terraform.tfstate'
      commandOptions: '-reconfigure'

# Terraform Validate
- ${{ if parameters.runValidate }}:
  - task: TerraformTask@5
    displayName: 'Terraform Validate'
    inputs:
      provider: 'azurerm'
      command: 'validate'

# Terraform Plan
- ${{ if parameters.runPlan }}:
  - task: TerraformTask@5
    displayName: 'Terraform Plan'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      environmentServiceNameAzureRM: 'DevSecOps_Federation'

# Terraform Apply
- ${{ if parameters.runApply }}:
  - task: TerraformTask@5
    displayName: 'Terraform Apply'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      environmentServiceNameAzureRM: 'DevSecOps_Federation'
