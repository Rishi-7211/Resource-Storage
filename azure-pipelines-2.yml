trigger:
  branches:
    include:
      - feature/*

pool:
  name: DevSecops_Agent

stages:
# -------------------- Stage 1: INIT + PLAN --------------------
- stage: Plan
  displayName: "Terraform Init and Plan"
  jobs:
  - job: TerraformPlan
    displayName: "Init and Plan"
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformTask@5
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'DevSecOps_Federation'
        backendAzureRmResourceGroupName: 'Vaishanvi_RG'
        backendAzureRmStorageAccountName: 'vaishanvistorage'
        backendAzureRmContainerName: 'vaishanvicontainer'
        backendAzureRmKey: 'Prod.tfstate'

    - task: TerraformTask@5
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        environmentServiceNameAzureRM: 'DevSecOps_Federation'

# -------------------- Stage 2: MANUAL APPROVAL + APPLY --------------------
- stage: Apply
  displayName: "Manual Approval then Apply"
  dependsOn: Plan
  condition: succeeded()
  jobs:
  - deployment: TerraformApply
    displayName: "Terraform Apply"
    environment: 'prod-approval'   # ðŸ‘ˆ Make sure this exists in Azure DevOps Environments
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformTask@5
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: 'DevSecOps_Federation'
